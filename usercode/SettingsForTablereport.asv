function varargout = SettingsForTablereport(varargin)
% SETTINGSFORTABLEREPORT M-file for SettingsForTablereport.fig
%      SETTINGSFORTABLEREPORT, by itself, creates a new SETTINGSFORTABLEREPORT or raises the existing
%      singleton*.
%
%      H = SETTINGSFORTABLEREPORT returns the handle to a new SETTINGSFORTABLEREPORT or the handle to
%      the existing singleton*.
%
%      SETTINGSFORTABLEREPORT('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in SETTINGSFORTABLEREPORT.M with the given input arguments.
%
%      SETTINGSFORTABLEREPORT('Property','Value',...) creates a new SETTINGSFORTABLEREPORT or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before SettingsForTablereport_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to SettingsForTablereport_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help SettingsForTablereport

% Last Modified by GUIDE v2.5 25-May-2012 07:03:33

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @SettingsForTablereport_OpeningFcn, ...
                   'gui_OutputFcn',  @SettingsForTablereport_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before SettingsForTablereport is made visible.
function SettingsForTablereport_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to SettingsForTablereport (see VARARGIN)

% Choose default command line output for SettingsForTablereport
handles.output = hObject;


handles.help=0;
    
handles.index_species=1;

set(handles.figure1,'name','Sources');

% UIWAIT makes SettingsForTablereport wait for user response (see UIRESUME)
% uiwait(handles.figure1);
set(handles.figure1,'position',[60 25 155.7 18.3])



%%PATTERNS


a = ENgetcount('pattern');

if a~=0
    i=1;

    while (i < (a+1))
    %id
        id = char(ENgetpatternid(i));
        handles.id(i) = [ ;{id}];
        i=i+1;
    end

    set(handles.listboxpattern,'String', handles.id);
end



%POP UP MENU

 
 a = ENgetcount('nodes');

i=1;
while (i < (a+1))

    %type
    type = ENgetnodetype(i);
    type = char(type);
    NODES(i,1) ={type};

    %id
    id = ENgetnodeid(i);
    id = sprintf(' %s',char(id));
    NODES(i,1) = strcat(NODES(i,1),id);

    
    s=2;
    index =1;
    while index <MSXgetcount('species')+1            
          Idspecies(s) = MSXgetID(index,'SPECIES');   
          if s > 1
            a = strcat(NODES(i),'_');
            a = strcat(a,Idspecies(s));
            ENaddpattern(chara)
          end

          index = index +1;                
          s=s+1;                
    end


    i=i+1;
end



set(handles.popupmenu,'String',NODES);

      
handles.Idspecies = Idspecies;

% Update handles structure
guidata(hObject, handles);



% --- Outputs from this function are returned to the command line.
function varargout = SettingsForTablereport_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on selection change in listboxpattern.
function listboxpattern_Callback(hObject, eventdata, handles)
% hObject    handle to listboxpattern (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns listboxpattern contents as cell array
%        contents{get(hObject,'Value')} returns selected item from listboxpattern

a = get(handles.listboxpattern,'Value'); 
list = (get(handles.listboxpattern,'String'));

% a is index pattern
if MSXgetcount('pattern')==0 && length(list)==0%an iparxei ii oxi pattern na sinexisi analoga.
    handles.zero = 0;
    % Update handles structure
    guidata(hObject, handles);
    savemat(hObject, eventdata, handles,a) % function where save index and call     MSX_PatternEditor;
elseif length(list)~=0
    handles.zero = 0;
    guidata(hObject, handles);
    savemat(hObject, eventdata, handles,a) % function where save index and call     MSX_PatternEditor;
else
    handles.zero = 1;
    guidata(hObject, handles);
    savemat(hObject, eventdata, handles,a) % function where save index and call     MSX_PatternEditor;
end


% --- Executes during object creation, after setting all properties.
function listboxpattern_CreateFcn(hObject, eventdata, handles)
% hObject    handle to listboxpattern (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: listbox controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit2_Callback(hObject, eventdata, handles)
% hObject    handle to edit2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit2 as text
%        str2double(get(hObject,'String')) returns contents of edit2 as a double


% --- Executes during object creation, after setting all properties.
function edit2_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in add.
function add_Callback(hObject, eventdata, handles)
% hObject    handle to add (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

list = (get(handles.listboxpattern,'String'));
new_id= get(handles.edit2,'String');

if length(list)==0
    v=0;
end

c=1;
while c<length(list)+1
   v = strcmp(list(c),new_id);
   c = c+1;
end

if v~=1

    if MSXgetcount('pattern')~=0 
         % get list listbox. 
         a = MSXgetcount('pattern');
         i=1;
         while (i < (a+1))
         %id
            id = char(MSXgetID(i,'pattern')); %i is index
            handles.id(i) = [ ;{id}];
            i=i+1;
         end

         set(handles.listboxpattern,'String', handles.id);

    end

        previousList = cellstr(get(handles.listboxpattern,'String'));

        % add new string to listbox
        new_id= get(handles.edit2,'String');
        new = char(new_id);
        new = cellstr(new);
        id = MSXaddpattern(char(new));

        if char(id)~=0
            listpattern = [previousList;{new_id}];

            set(handles.listboxpattern,'String',listpattern);
            
            if MSXgetcount('pattern')==1
                set(handles.listboxpattern,'String',{new_id});
            end
            
        else
            uiwait(msgbox('Invalid property values were specified.','Error','modal'));
        end
else
    uiwait(msgbox('Invalid pattern','Error','modal'));
end


if str2num(new_id)~=0
    set(handles.edit2,'String',str2num(new_id)+1);
end


function savemat(hObject, eventdata, handles,index)
list = (get(handles.listboxpattern,'String'));

if handles.zero==1 
    Getpatternindex = index-1;
    
elseif length(list)==0
    Getpatternindex = index-1;
else
    Getpatternindex = index;
end

if Getpatternindex~=0
    MSX_PatternEditor(Getpatternindex);
end

% --- Executes on selection change in listboxconcen.
function listboxconcen_Callback(hObject, eventdata, handles)
% hObject    handle to listboxconcen (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns listboxconcen contents as cell array
%        contents{get(hObject,'Value')} returns selected item from listboxconcen


% --- Executes during object creation, after setting all properties.
function listboxconcen_CreateFcn(hObject, eventdata, handles)
% hObject    handle to listboxconcen (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: listbox controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit4_Callback(hObject, eventdata, handles)
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit4 as text
%        str2double(get(hObject,'String')) returns contents of edit4 as a double


% --- Executes during object creation, after setting all properties.
function edit4_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit5_Callback(hObject, eventdata, handles)
% hObject    handle to edit5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit5 as text
%        str2double(get(hObject,'String')) returns contents of edit5 as a double


% --- Executes during object creation, after setting all properties.
function edit5_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit6_Callback(hObject, eventdata, handles)
% hObject    handle to edit6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit6 as text
%        str2double(get(hObject,'String')) returns contents of edit6 as a double


% --- Executes during object creation, after setting all properties.
function edit6_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit7_Callback(hObject, eventdata, handles)
% hObject    handle to edit7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit7 as text
%        str2double(get(hObject,'String')) returns contents of edit7 as a double


% --- Executes during object creation, after setting all properties.
function edit7_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit8_Callback(hObject, eventdata, handles)
% hObject    handle to edit8 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit8 as text
%        str2double(get(hObject,'String')) returns contents of edit8 as a double


% --- Executes during object creation, after setting all properties.
function edit8_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit8 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in pushbutton7.
function pushbutton7_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton8.
function pushbutton8_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton8 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton9.
function pushbutton9_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton9 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)



function pattern_Callback(hObject, eventdata, handles)
% hObject    handle to pattern (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of pattern as text
%        str2double(get(hObject,'String')) returns contents of pattern as a double



% --- Executes during object creation, after setting all properties.
function pattern_CreateFcn(hObject, eventdata, handles)
% hObject    handle to pattern (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function patternNh2cl_Callback(hObject, eventdata, handles)
% hObject    handle to patternNh2cl (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of patternNh2cl as text
%        str2double(get(hObject,'String')) returns contents of patternNh2cl as a double


% --- Executes during object creation, after setting all properties.
function patternNh2cl_CreateFcn(hObject, eventdata, handles)
% hObject    handle to patternNh2cl (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in pushbutton11.
function pushbutton11_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton11 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

set(handles.figure1,'visible','off');


% --- Executes on button press in help.
function help_Callback(hObject, eventdata, handles)
% hObject    handle to help (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)



% --- Executes on button press in pushbutton10.
function pushbutton10_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton10 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)




% --- Executes during object creation, after setting all properties.
function text_CreateFcn(hObject, eventdata, handles)
% hObject    handle to text (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on selection change in popupmenu.
function popupmenu_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns popupmenu contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu




% --- Executes during object creation, after setting all properties.
function popupmenu_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function level_Callback(hObject, eventdata, handles)
% hObject    handle to level (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of level as text
%        str2double(get(hObject,'String')) returns contents of level as a double


% --- Executes during object creation, after setting all properties.
function level_CreateFcn(hObject, eventdata, handles)
% hObject    handle to level (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function source_Callback(hObject, eventdata, handles)
% hObject    handle to source (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of source as text
%        str2double(get(hObject,'String')) returns contents of source as a double


% --- Executes during object creation, after setting all properties.
function source_CreateFcn(hObject, eventdata, handles)
% hObject    handle to source (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in next.
function next_Callback(hObject, eventdata, handles)
% hObject    handle to next (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


index = get(handles.popupmenu,'Value'); % index node

handles.index_species= handles.index_species +1;
% Update handles structure
guidata(hObject, handles);

if handles.index_species< MSXgetcount('species')+1 && handles.index_species>0

   set(handles.as3text,'string',handles.Idspecies(handles.index_species+1));


else
    
    handles.index_species=0;
    next_Callback(hObject, eventdata, handles)

end


% --- Executes on button press in back.
function back_Callback(hObject, eventdata, handles)
% hObject    handle to back (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

index = get(handles.popupmenu,'Value'); % index node

handles.index_species= handles.index_species -1;
% Update handles structure
guidata(hObject, handles);

if handles.index_species==0
    
    handles.index_species=1;
    
end


if handles.index_species< MSXgetcount('species')+1 && handles.index_species>0




   set(handles.as3text,'string',handles.Idspecies(handles.index_species+1));


else
    handles.index_species=MSXgetcount('species')+1;
    back_Callback(hObject, eventdata, handles)
end


% --- Executes on button press in save.
function save_Callback(hObject, eventdata, handles)
% hObject    handle to save (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

index = get(handles.popupmenu,'Value'); % index node

Idspecies = get(handles.as3text,'string'); % value = index node

Index_species = MSXgetindex('SPECIES',char(Idspecies));

with = get(handles.with,'value');
without = get(handles.without,'value');

Index_n_s = strcat(char(Idspecies),'_');
Index_n_s = strcat(char(Index_n_s),num2str(index));


if with==1
    PatternsIndexUse(index,Index_species) = with;
    
    save(Index_n_s,PatternsIndexUse)

else
    PatternsIndexUse(index,Index_species) = without;

    save(Index_n_s,'PatternsIndexUse')

end


    
  

% --- Executes on button press in pushbutton15.
function pushbutton15_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton15 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


if handles.help==0
    
    set(handles.helpsource,'visible','on');
    
    handles.help=1;
    % Update handles structure
    guidata(hObject, handles);

else
    
    set(handles.helpsource,'visible','off');

    handles.help=0;
    % Update handles structure
    guidata(hObject, handles);

end


% --- Executes on button press in without.
function without_Callback(hObject, eventdata, handles)
% hObject    handle to without (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of without


% --- Executes on button press in with.
function with_Callback(hObject, eventdata, handles)
% hObject    handle to with (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of with

 
    
    
